from Crypto.Util.number import long_to_bytes
from public_values_aux import *

load('castryck_decru_shortcut.sage')

a = 43
b = 26
p = 2^a*3^b - 1
assert p in Primes()

K.<i> = GF(p^2, modulus=x^2+1)
PR.<x> = PolynomialRing(K)
E = EllipticCurve(K, [1, 0])
E.set_order((p+1)^2)

Pa = E(20816113353953844596827139*i + 16418101434179547435831830, 9782287231195084940947894*i + 8305288838066432045414923)
Pb = E(7582970089792232978539532*i + 6411668474015872447958400, 15459880436272725660545115*i + 7977012527121440514383975)
Qa = E(13022786448801065009926908*i + 21396754486749480260181021, 5027869541156315740937282*i + 8428382255806278677381816)
Qb = E(10341548384598782389107676*i + 12525908271709247355078632, 6555843755802979256565190*i + 11595932163398809254591141)

Ea = EllipticCurve(K, [4926878008530427712778566*i+8053083788709808436490360, 18771446501040649196825847*i+16306438728950797793375410])
phiPb = Ea(2535790352220803985875373*i + 17699033710915047849396921, 2413558249712558899689063*i + 5157954648088691506046995)
phiQb = Ea(16568070039544280994803013*i + 21423138055383385576701886, 5040448698696125071219900*i + 6672798507142407841550817)

Eb = EllipticCurve(K, [18866222948911535725014127*i+21372353382532165741892023, 14780329017962693588095579*i+4731720677310255642021851])
psiPa = Eb(3413055427164626562463192*i + 5176875496413372729075617, 17919859745180152815219510*i + 18120119720358642060676362)
psiQa = Eb(18433160961475396600407402*i + 22312166252239187097449810, 10433258275941991434154560*i + 9029292514862239326241711)

### Recovery

phi = EllipticCurveIsogeny(E, x)
E1728 = phi.codomain()

for iota in E1728.automorphisms():
    P = E1728.random_point()
    if iota(iota(P)) == -P:
        two_i = phi.post_compose(iota).post_compose(phi.dual())
        break


num_cores = 1
P3 = Pb
Q3 = Qb
recovered = CastryckDecruAttack(E, Pa, Qa, Eb, psiPa, psiQa, two_i, num_cores=num_cores)

shared = Ea.isogeny(phiPb + recovered * phiQb, algorithm='factored').codomain().j_invariant()

c = 243706092945144760206191226817331300960683091878992
key = ((int(shared[1]) << 84) + int(shared[0]))
flag = b"RCTF{" + long_to_bytes(c ^^ key) + b"}"

assert flag == b"RCTF{SIDH_isBr0ken_in_2O22}"
print(flag)
